module open-traffic-generator-isis {
  yang-version "1";

  namespace "http://gitub.com/open-traffic-generator/models-yang/models/isis";
  prefix "otg-isis";

  import open-traffic-generator-types {
    prefix "otg-types";
  }

  organization
    "OpenTrafficGenerator working group";

  contact
    "OpenTrafficGenerator working group
     opentrafficgenerator@googlegroups.com";

  description
    "This module defines telemetry that relOTGs to ISIS sessions that
    are controlled by an open traffic generator (OTG) whose definition
    is outside of the context of this module.";

  revision 2022-01-21 {
    description "Initial revision.";
    reference "0.1.0";
  }

  grouping isis-top {
    description
      "Top-level structural grouping for ISIS router telemetry
      entries.";

    container isis-routers {
      description
        "ISIS router telemetry collected by the OTG device.";

      list isis-router {
        key "name";

        config false;

        description
          "Each ISIS router is identified by an arbitrary string
          identifier.";

        leaf name {
          type leafref {
            path "../state/name";
          }
          description
            "Reference to the ISIS router's name, acting as a key of
            the ISIS router list.";
        }

        container state {
          description
            "Operational state of an individual ISIS router.";
          uses isis-state;
        }
      }
    }
  }

  grouping isis-state {
    description
      "Operational state of an individual ISIS router.";

    leaf name {
      type string;
      description
        "An arbitary name of the ISIS router determined by the OTG
        configuration.";
    }

    container counters {
      description
        "Level counters of the ISIS router.";

      uses isis-level-counters;
    }

    container link-state-databases {
      description
        "This sub-module describes a YANG model for the IS-IS Link State
         Database (LSDB)";

      uses lsp-states;
    }
  }

  grouping isis-level-counters {
    description
      "Operational level counters of the ISIS router.";

    container level1 {
      description
        "Level1 counters of the ISIS router.";
      uses isis-counters;
    }

    container level2 {
      description
        "Level2 counters of the ISIS router.";
      uses isis-counters;
    }
  }

  grouping lsp-states {
    description
      "This grouping defines ISIS LSP state information.";
    reference
      "1. https://github.com/openconfig/public/blob/master/release/models/isis/openconfig-isis-lsp.yang
       2. http://ops.openconfig.net/branches/models/master/docs/openconfig-isis.html
       3. https://github.com/openconfig/public/tree/master/release/models/isis";
    container lsp-states {
      description
        "Test.";
      list lsps {
        key "lsp-id";
        description
          "The system ID of the router.";

        leaf lsp-id {
          type leafref {
            path "../state/lsp-id";
          }
          description
          "A reference to the Link State PDU ID.";
        }

        container state {
          description
            "State parameters of Link State PDU.";

          leaf lsp-id {
            type otg-types:hex-string;
            description
              "LSP ID of the LSP, e.g. '6400000000010000'.";
          }

          leaf pdu-type {
            type enumeration {
              enum LEVEL_1 {
                description "This enum describes ISIS level 1 PDU.";
              }
              enum LEVEL_2 {
                description "This enum describes ISIS level 2 PDU.";
              }
            }
            description
              "Link State PDU type.";
          }

          leaf remaining-lifetime {
            type uint16;
            units "seconds";
            description
              "Remaining lifetime in seconds before the LSP expiration.";
          }

          leaf sequence-number {
            type uint32;
            description
              "Sequence number of the LSP.";
          }

          leaf pdu-length {
            type uint16;
            description
              "Total length of the LSP.";
          }

          leaf-list flags {
            type enumeration {
               enum PARTITION_REPAIR {
                description
                  "When set, the originator supports partition
                  repair.";
              }
              enum ATTACHED_ERROR {
                description
                  "When set, the originator is attached to another
                  area using the referred metric.";
              }
              enum ATTACHED_EXPENSE {
                description
                  "When set, the originator is attached to another
                  area using the referred metric.";
              }
              enum ATTACHED_DELAY {
                description
                  "When set, the originator is attached to another
                  area using the referred metric.";
              }
              enum ATTACHED_DEFAULT {
                description
                  "When set, the originator is attached to another
                  area using the referred metric.";
              }
              enum OVERLOAD {
                description
                  "When set, the originator is overloaded, and must
                  be avoided in path calculation.";
              }
            }
            description
              "LSP Type-Block flags.";
          }

          leaf is-type {
            type uint8;
            description
              "Type of neighboring system.";
          }
        }
        container tlvs {
          description
            "This container defines Link State PDU State TLVs.";

          list tlv {
            key "type";

            description
              "List of TLV types in the LSDB for the specified LSP.";

            leaf type {
              type leafref {
                path "../state/type";
              }
              description
                "Reference to the TLV's type.";
            }

            container state {
              config false;
              description
                "Operational state parameters relating to the specified
                LSP";

              uses isis-lsdb-tlv-type-state;
            }

            container hostname {
              description
                "This container defines TLV 137.";

              container state {
                description
                  "State parameters of ISIS TLV 137.";

                leaf-list hostname {
                  type string;
                  description
                    "Name of the node.";

                  reference
                    "RFC6233: IS-IS Registry Extension for Purges, RFC
                    5301: Dynamic Hostname Exchange Mechanism for IS-IS.
                    TLV 137";
                }
              }
            }

            container is-reachability {
              description
                "This container describes list of ISIS neighbors and
                attributes.";

              reference
                "ISO 10589, Intermediate System to Intermediate System
                Intra- Domain Routeing Exchange Protocol for use in
                Conjunction with the Protocol for Providing the
                Connectionless-mode Network Service (ISO 8473),
                International Standard 10589: 2002, Second Edition,
                2002. TLV 2.";

              container neighbors {
                description
                  "This container describes IS neighbors.";

                list neighbor {
                  key "system-id";
                  description
                    "IS reachability neighbor attributes.";

                  leaf system-id {
                    type leafref {
                      path "../state/system-id";
                    }
                    description
                      "Reference to the system ID of the neighbor.";
                  }

                  uses isis-lsdb-neighbor;
                }
              }
            }


            container ipv4-internal-reachability {
              description
                "This container defines list of IPv4 internal reachability information.
                This is advertised when the origin-type is set 'internal' in route range configuration";

              reference
                "RFC1195: OSI ISIS for IP and Dual Environments. RFC5302:
                Domain-Wide Prefix Distribution with Two-Level IS-IS. TLV
                128";

              container prefixes {
                description
                  "This container describes IS prefixes.";

                list prefix {
                  key "prefix";

                  description
                    "IPv4 prefixes and internal reachability attributes.";

                  leaf prefix {
                    type leafref {
                      path "../state/prefix";
                    }
                    description
                      "Reference to the IPv4 prefix";
                  }

                  uses ipv4-prefix-attributes-state;
                }
              }
            }

            container ipv4-external-reachability {
              description
              "This container defines list of IPv4 external reachability information.
              This is advertised when the origin-type is set 'external' in route range configuration";

              reference
                "RFC1195: OSI ISIS for IP and Dual Environments.  RFC5302:
                Domain-Wide Prefix Distribution with Two-Level IS-IS. TLV
                130";

              container prefixes {
                description
                  "This container describes IS neighbors.";

                list prefix {
                  key "prefix";

                  description
                    "IPv4 external prefixes and reachability attributes.";

                  leaf prefix {
                    type leafref {
                      path "../state/prefix";
                    }
                    description
                      "Reference to the IPv4 prefix.";
                  }

                  uses ipv4-prefix-attributes-state;
                }
              }
            }

            container extended-is-reachability {
              description
                "This container defines list of ISIS extended reachability
                neighbors.";

              reference
                "RFC5305: IS-IS Extensions for Traffic Engineering. TLV
                22.";

              uses isis-lsdb-common-extisreach-neighbors;
            }

            container extended-ipv4-reachability {
              description
                "This container defines list of IPv4 extended reachability
                information.
                It is advertised when the 'wide metric' is enabled";

              reference
                "RFC5305: IS-IS Extensions for Traffic Engineering. TLV
                135";

              container prefixes {
                description
                  "This container describes IS prefixes.";

                list prefix {
                  key "prefix";

                  description
                    "This list describes IPv4 extended prefixes and
                    attributes.";

                  leaf prefix {
                    type leafref {
                      path "../state/prefix";
                    }
                    description
                      "Reference to the IPv4 prefix that the TLV describes
                      the attributes of.";
                  }

                  uses ipv4-prefix-extended-state;
                }
              }
            }

            container ipv6-reachability {
              description
                "This container defines list of IPv6 reachability
                information.";

              reference
                "RFC5308: Routing IPv6 with IS-IS. TLV 236";

              container prefixes {
                description
                  "This container describes IS prefixes.";

                list prefix {
                  key "prefix";

                  description
                    "This list defines IPv6 extended prefix attributes.";

                  leaf prefix {
                    type leafref {
                      path "../state/prefix";
                    }
                    description
                      "Reference to the IPv6 prefix that the TLV
                      corresponds to.";
                  }

                  uses ipv6-prefix-extended-state;
                }
              }
            }
          }
        }
      }
    }
  }
  grouping isis-lsdb-neighbor {
    description
      "This grouping defines attributes of an ISIS standard
      neighbor.";

    container state {
      description
        "State parameters of IS standard neighbor.";

      leaf system-id {
        type otg-types:hex-string;
        description
          "System-ID of IS neighbor, e.g. '640100010000'.";
      }
    }

    //uses isis-lsdb-common-metric-specification;

  }

  grouping isis-lsdb-common-metric-specification {
    description
      "Common definitions of the metric in IS-IS.";

    container default-metric {
      description
        "This container defines ISIS Default Metric.";

      container state {
        description
          "State parameters for default-metric.";

        leaf flags {
          type enumeration {
            enum INTERNAL {
              description
                "When set to zero, indicates internal metrics.";
            }
          }
          description
            "ISIS Default-Metric Flags.";
        }

        leaf metric {
          type uint8;
          description
            "ISIS default metric value. This is a metric understood by
            every Intermediate system in the domain. Each circuit
            shall have a positive  integral value assigned for this
            metric. The value may be associated with any  objective
            function of the circuit, but by convention is intended to
            measure the capacity of the circuit for handling traffic,
            for example, its throughput in  bits-per-second. Higher
            values indicate a lower capacity.";
        }
      }
    }
  }

  grouping ipv4-prefix-attributes-state {
   description
     "This group defines attributes of an IPv4 standard prefix.";

    container state {
     description
       "State parameters of IPv4 standard prefix.";

      leaf up-down {
        type boolean;
        description
          "The up/down bit. Set if a prefix is advertised from a
          higher level to a lower level (e.g., level 2 to level 1),
          indicating that the prefix has traveled down the hierarchy.
          Prefixes that have the up/down bit set may only be
          advertised down the hierarchy, i.e., to lower levels. When a
          prefix is first injected into IS-IS, the bit is UNSET.";
      }

      leaf prefix {
        type otg-types:ipv4-address;
        description
          "IPv4 prefix contained within reachability TLVs.";
      }
    }

    uses isis-lsdb-common-metric-specification;
  }

  grouping isis-counters {
    description
      "Level counters of the ISIS router.";

    leaf sessions-up {
      type otg-types:counter64;
      description
        "The total number of sessions that are fully up.";
    }

    leaf sessions-flap {
      type otg-types:counter64;
      description
        "The total number of sessions flap.";
    }

    leaf database-size {
      type otg-types:counter64;
      description
        "The total number of link stOTG updOTGs (LSPs) in the LSP
        databases.";
    }

    leaf out-bcast-hellos {
      type otg-types:counter64;
      description
        "The total number of broadcast HELLO messages sent.";
    }

    leaf in-bcast-hellos {
      type otg-types:counter64;
      description
        "The total number of broacast HELLO messages received.";
    }

    leaf out-p2p-hellos {
      type otg-types:counter64;
      description
        "The total number of point to point (P2P) HELLO messages
        sent.";
    }

    leaf in-p2p-hellos {
      type otg-types:counter64;
      description
        "The total number of point to point (P2P) HELLO messages
        received.";
    }

    leaf out-psnp {
      type otg-types:counter64;
      description
        "The total number of partial sequence number packet (PSNPs)
        messages sent.";
    }

    leaf in-psnp {
      type otg-types:counter64;
      description
        "The total number of partial sequence number packet (PSNPs)
        messages received.";
    }

    leaf out-csnp {
      type otg-types:counter64;
      description
        "The total number of complete sequence number packet (CSNPs)
        messages sent.";
    }

    leaf in-csnp {
      type otg-types:counter64;
      description
        "The total number of complete sequence number packet (CSNPs)
        messages received.";
    }

    leaf out-lsp {
      type otg-types:counter64;
      description
        "The total number of link stOTG protocol data units (LSPs)
        sent.";
    }

    leaf in-lsp {
      type otg-types:counter64;
      description
        "The total number of link stOTG protocol data units (LSPs)
        received.";
    }
  }

  grouping isis-lsdb-tlv-type-state {
    description
      "Per-subTLV type operational state parameters for ISIS.";

    leaf type {
      type uint8;
      description
        "The type of TLV being described. The type of TLV is
        expressed as a canonical name.";
    }
  }

  grouping isis-lsdb-common-extisreach-neighbors {
    description
      "Common structure for the Extended IS Reachability and IS
      Reachability Neighbour attributes.";

    container neighbors {
      description
        "This container describes IS neighbors.";

      list neighbor {
        key "system-id";
        description
          "This list describes ISIS extended neighbors and
          reachability attributes.";

        leaf system-id {
          type leafref {
            path "../state/system-id";
          }
          description
            "Reference to the neighboring system's system ID.";
        }

        container state {
          description
            "State parameters corresponding to the extended
            neighbour.";

          leaf system-id {
            type otg-types:hex-string;
            description
              "System-id of the neighbor.";
          }
        }
      }
    }
  }

  grouping isis-lsdb-subtlv-type-state {
    description
      "Per-subTLV type operational state parameters for ISIS.";

    leaf type {
      type uint8;
      description
        "The type of subTLV being described. The type of subTLV is
        expressed as a canonical name.";
    }
  }

  grouping ipv4-prefix-extended-state {
    description
      "This grouping defines attributes of an IPv4 extended prefix.";

    container state {
      description
        "State parameters of an IPv4 extended prefix.";
      uses ipv4-prefix-extended-params-state;
    }

    uses isis-lsdb-prefix-state;
  }

  grouping ipv4-prefix-extended-params-state {
    description
      "State parameters that relate to an IPv4 prefix";

    leaf up-down {
      type boolean;
      description
        "The up/down bit. Set if a prefix is advertised from a
        higher level to a lower level (e.g., level 2 to level 1),
        indicating that the prefix has traveled down the hierarchy.
        Prefixes that have the up/down bit set may only be
        advertised down the hierarchy, i.e., to lower levels. When a
        prefix is first injected into IS-IS, the bit is UNSET.";
    }

    leaf s-bit {
      type boolean;
      description
        "The Sub-TLV present bit. If UNSET, the octets of Sub-TLVs
        are not present. Otherwise, the bit is set and the octet
        following the prefix will contain the length of the Sub-TLV
        portion of the structure.";
    }

    leaf prefix {
      type otg-types:ipv4-address;
      description
        "IPv4 prefix contained within extended reachability TLVs.";
    }

    leaf metric {
      type uint32;
      description
        "ISIS wide metric.";
    }
  }

  grouping ipv6-prefix-extended-state {
    description
      "State parameters relating to an IPv6 prefix.";

    container state {
      description
        "State parameters of IPv6 prefix attributes";

      uses ipv6-prefix-extended-params-state;
    }

    uses isis-lsdb-prefix-state;
  }

  grouping ipv6-prefix-extended-params-state {
    description
      "Common parameters of an IPv6 extended prefix.";

    leaf up-down {
      type boolean;
      description
        "The up/down bit. Set if a prefix is advertised from a
        higher level to a lower level (e.g., level 2 to level 1),
        indicating that the prefix has traveled down the hierarchy.
        Prefixes that have the up/down bit set may only be
        advertised down the hierarchy, i.e., to lower levels. When a
        prefix is first injected into IS-IS, the bit is UNSET.";
    }

    leaf x-bit {
      type boolean;
      description
        "The external bit. Set when the prefix was distributed into
        IS-IS from another routing protocol.";
    }

    leaf s-bit {
      type boolean;
      description
        "The sub-tlv present bit. If UNSET, the octets of Sub-TLVs
         are not present. Otherwise, the bit is set and the octet
         following the prefix will contain the length of the Sub-TLV
         portion of the structure.";
    }

    leaf prefix {
      type otg-types:ipv6-address;
      description
        "IPv6 prefix contained within extended reachability TLVs.";
    }

    leaf metric {
      type uint32;
      description
        "ISIS wide metric value.";
    }
  }

  grouping isis-lsdb-prefix-state {
    description
      "This grouping defines prefix reachability.";

     container subtlvs {
      description
        "This container describes IS prefix sub-TLVs.";

      list subtlv {
        key "type";

        description
          "List of subTLV types in the LSDB for the specified TLV.";

        leaf type {
          type leafref {
            path "../state/type";
          }
          description
            "Reference to the sub-TLV type";
        }

        container state {
          description
            "State parameters for a prefix.";

          uses isis-lsdb-subtlv-type-state;
        }
      container flags {
        description
          "This container defines sub-TLV 4.";

        container state {
          description
            "State parameters of sub-TLV 4.";

          uses isis-lsdb-subtlv-type-state;

          leaf-list flags {
            type enumeration {
              enum EXTERNAL_FLAG {
                description
                  "External prefix flag. Set if the prefix has been
                  redistributed from another protocol. This includes
                  the case where multiple virtual routers are
                  supported and the source of the redistributed prefix
                  is another IS-IS instance.";
              }
              enum READVERTISEMENT_FLAG {
                description
                  "Readvertisement flag. Set when the prefix has been
                  leaked from one level to another (upwards or
                  downwards).";
              }
              enum NODE_FLAG {
                description
                  "Node flag. Set when the prefix identifies the
                  advertising router, i.e., the prefix is a host
                  prefix advertising  a globally reachable address
                  typically associated with a loopback address.";
              }
            }
            description
              "Additional prefix reachability flags.";

            reference
              "RFC7794: IS-IS Prefix Attributes for Extended IPv4 and
              IPv6 Reachability. sub-TLV 4.";
            }
          }
        }
      }
    }
  }
  uses isis-top;
}
